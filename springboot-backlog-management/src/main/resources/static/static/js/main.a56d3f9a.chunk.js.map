{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/backlogReducer.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","actions/backlogActions.js","components/projectBoard/ProjectTasks/ProjectTask.js","components/projectBoard/Backlog.js","components/projectBoard/ProjectBoard.js","components/projectBoard/ProjectTasks/AddProjectTask.js","components/projectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","react_default","a","createElement","react","react_router_dom","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","LOGOUT","createProject","project","navigate","_ref","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","t0","console","log","type","payload","response","data","stop","_x","apply","this","arguments","connect","deleteProject","id","_ref4","_callee4","_context4","window","confirm","delete","concat","_x4","projectIdentifier","projectName","description","href","onClick","state","getProjects","_ref2","_callee2","res","_context2","get","sent","_x2","useEffect","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","security","headerLinks","validToken","user","useNavigate","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","errors","_useState","useState","start_date","end_date","_useState2","slicedToArray","dataForm","setDataForm","onChange","e","objectSpread","defineProperty","target","name","value","onSubmit","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","length","undefined","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","getProject","_ref3","_callee3","_context3","_x3","useParams","updateProject","disabled","deleteProjectTask","backlog_id","pt_id","_ref5","backlogActions_regeneratorRuntime","_callee5","_context5","_x5","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","props","status","push","getBacklog","BoardContent","err","setErr","projectNotFound","role","projectBoard_Backlog","boardAlgorithm","addProjectTask","dueDate","newDataForm","getProjectTask","updateProjectTask","patch","_useParams","created_At","UpdateProjectTask","create_At","createNewUser","newUser","securityActions_regeneratorRuntime","username","password","confirmPassword","login","LoginRequest","decoded","setItem","jwt_decode","Component","component","react_router","App","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","location","es","Layout_Header","exact","path","element","Layout_Landing","UserManagement_Register","UserManagement_Login","securityUtils_SecureRoute","Dashboard","AddProject","UpdateProject","ProjectBoard","AddProjectTask","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.a56d3f9a.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <Fragment>\r\n        <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n            Create a Project\r\n        </Link>\r\n    </Fragment>\r\n  )\r\n};\r\n\r\nexport default CreateProjectButton;","export const GET_ERRORS = 'GET_ERRORS';\r\nexport const GET_PROJECTS = 'GET_PROJECTS';\r\nexport const GET_PROJECT = 'GET_PROJECT';\r\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\r\n\r\n// Types for BACKLOG ACTIONS\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const LOGOUT = \"LOGOUT\";","import axios from \"axios\";\r\nimport { DELETE_PROJECT, GET_ERRORS, GET_PROJECT, GET_PROJECTS } from \"./types\";\r\n\r\nexport const createProject = (project, navigate) => async dispatch => {\r\n    try {\r\n        await axios.post('/api/project', project);\r\n        navigate('/dashboard');\r\n    } catch (err) {\r\n        console.log(err)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/project/all');\r\n\r\n        dispatch({\r\n            type: GET_PROJECTS,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        console.log(err);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const getProject = (id, navigate) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/project/${id}`);\r\n\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        navigate('../dashboard');\r\n    }\r\n    \r\n};\r\n\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n    try {\r\n        if(window.confirm(\"Are you sure? This will delete the project and all data related.\")){\r\n            await axios.delete(`/api/project/${id}`);\r\n            dispatch({\r\n                type: DELETE_PROJECT,\r\n                payload: id\r\n            });\r\n        }\r\n        \r\n    } catch (err) {\r\n        console.log(err);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteProject } from '../../actions/projectActions';\r\n\r\nconst ProjectItem = ({ deleteProject, project }) => {\r\n\r\n    const onDeleteClick = id => {\r\n        deleteProject(id);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card card-body bg-light mb-3\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\">\r\n                        <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                    </div>\r\n                    <div className=\"col-lg-6 col-md-4 col-8\">\r\n                        <h3>{project.projectName}</h3>\r\n                        <p>{project.description}</p>\r\n                    </div>\r\n                    <div className=\"col-md-4 d-none d-lg-block\">\r\n                        <ul className=\"list-group\">\r\n                            <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                                <li className=\"list-group-item board\">\r\n                                    <i className=\"fa fa-flag-checkered pr-1\">Project Board </i>\r\n                                </li>\r\n                            </Link>\r\n                            <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                                <li className=\"list-group-item update\">\r\n                                    <i className=\"fa fa-edit pr-1\">Update Project Info</i>\r\n                                </li>\r\n                            </Link>\r\n                            <a href=\"#!\">\r\n                                <li className=\"list-group-item delete\" onClick={() => onDeleteClick(project.projectIdentifier)}>\r\n                                    <i className=\"fa fa-minus-circle pr-1\">Delete Project</i>\r\n                                </li>\r\n                            </a>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nProjectItem.propTypes = {\r\n    deleteProject: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React, { useEffect } from 'react'\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport {connect} from 'react-redux';\r\nimport { getProjects } from '../actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Dashboard = ({ project, getProjects }) => {\r\n\r\n    useEffect(() => {\r\n        getProjects();\r\n    }, [getProjects]);\r\n\r\n    const { projects } = project;\r\n\r\n    return (\r\n        <div className=\"projects\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"display-4 text-center\">Projects</h1>\r\n                        <br />\r\n\r\n                        <CreateProjectButton />\r\n\r\n                        <br />\r\n                        <hr />\r\n                        {\r\n                            projects.map(project => (\r\n                                <ProjectItem key={project.id} project={project} />\r\n                            ))\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nDashboard.propTypes = {\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project,\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    { getProjects }\r\n)(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setJWTToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, LOGOUT, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, navigate) => async dispatch => {\r\n    try {\r\n        await axios.post('/api/users/register', newUser);\r\n        navigate('/login');\r\n\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n    try {\r\n        const res = await axios.post('/api/users/login', LoginRequest);\r\n        const { token } = res.data;\r\n        localStorage.setItem('jwtToken', token);\r\n        setJWTToken(token);\r\n        const decoded = jwt_decode(token);\r\n\r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decoded\r\n        });\r\n    } catch(err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setJWTToken(false);\r\n\r\n    dispatch({\r\n        type: LOGOUT,\r\n        payload: {}\r\n    });\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/securityActions';\r\n\r\nconst Header = ({ security, logout }) => {\r\n    const { validToken, user } = security;\r\n    const navigate = useNavigate();\r\n\r\n    const onClick = () => {\r\n        logout();\r\n        // window.location.href = \"/\";\r\n        navigate('/');\r\n    };\r\n\r\n    const userIsAuthenticated = (\r\n        <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/dashboard\">\r\n                        Dashboard\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link \" to=\"/dashboard\">\r\n                        <i className='fas fa-user-circle mr-1' />\r\n                        {user.fullName}\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link \r\n                        className=\"nav-link\" \r\n                        to=\"/\" \r\n                        onClick={onClick}\r\n                    >\r\n                        Logout\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n\r\n    const userIsNotAuthenticated = (\r\n        <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link \" to=\"/register\">\r\n                        Sign Up\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/login\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n\r\n\r\n    \r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n        headerLinks = userIsAuthenticated;\r\n    } else {\r\n        headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n                Personal Project Management Tool\r\n            </Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                <span className=\"navbar-toggler-icon\" />\r\n            </button>\r\n            {headerLinks}\r\n        </div>\r\n    </nav>\r\n    )\r\n};\r\n\r\nHeader.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createProject } from '../../actions/projectActions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport classnames from 'classnames';\r\n\r\nconst AddProject = ({ createProject, errors }) => {\r\n  const navigate = useNavigate();\r\n  const [dataForm, setDataForm] = useState({\r\n    projectName:\"\",\r\n    projectIdentifier:\"\",\r\n    description:\"\",\r\n    start_date:\"\",\r\n    end_date:\"\",\r\n    errors: {}\r\n  });\r\n  \r\n\r\n  const onChange = e => {\r\n    setDataForm({ ...dataForm, [e.target.name]: e.target.value });\r\n  }\r\n\r\n\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: dataForm.projectName,\r\n      projectIdentifier: dataForm.projectIdentifier,\r\n      description: dataForm.description,\r\n      start_date: dataForm.start_date,\r\n      end_date: dataForm.end_date\r\n    };\r\n\r\n    createProject(newProject, navigate);\r\n\r\n  };\r\n\r\n  //life cycle hooks\r\n  useEffect(() => {\r\n    setDataForm({...dataForm, errors: errors });  \r\n  }, [errors])\r\n\r\n  \r\n  return (\r\n    <div className=\"project\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-8 m-auto\">\r\n            <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n            <hr />\r\n            <form onSubmit={e => onSubmit(e)}>\r\n              <div className=\"form-group\">\r\n                  <input \r\n                  type=\"text\" \r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.projectName\r\n                  })}\r\n                  placeholder=\"Project Name\" \r\n                  name='projectName'\r\n                  value={dataForm.projectName}\r\n                  onChange={e => onChange(e)}\r\n                  />\r\n                  {errors.projectName && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectName}\r\n                      </div>\r\n                    )}\r\n              </div>\r\n              <br />\r\n              <div className=\"form-group\">\r\n                  <input \r\n                  type=\"text\" \r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.projectIdentifier\r\n                  })}\r\n                  placeholder=\"Unique Project ID\" \r\n                  name='projectIdentifier'\r\n                  value={dataForm.projectIdentifier}\r\n                  onChange={e => onChange(e)}\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.projectIdentifier}\r\n                      </div>\r\n                    )}\r\n              </div>\r\n              <br />\r\n              <div className=\"form-group\">\r\n                  <textarea \r\n                  className={classnames(\"form-control form-control-lg\", {\r\n                    \"is-invalid\": errors.description\r\n                  })}\r\n                  placeholder=\"Project Description\"\r\n                  name='description'\r\n                  value={dataForm.description}\r\n                  onChange={e => onChange(e)}\r\n                  />\r\n                  {errors.description && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.description}\r\n                      </div>\r\n                    )}\r\n              </div>\r\n              <h6>Start Date</h6>\r\n              <div className=\"form-group\">\r\n                  <input \r\n                  type=\"date\" \r\n                  className=\"form-control form-control-lg\" \r\n                  name=\"start_date\" \r\n                  value={dataForm.start_date}\r\n                  onChange={e => onChange(e)}\r\n                  />\r\n              </div>\r\n              <h6>Estimated End Date</h6>\r\n              <div className=\"form-group\">\r\n                  <input \r\n                  type=\"date\" \r\n                  className=\"form-control form-control-lg\" \r\n                  name=\"end_date\" \r\n                  value={dataForm.end_date}\r\n                  onChange={e => onChange(e)}\r\n                  />\r\n              </div>\r\n\r\n              <input \r\n              type=\"submit\" \r\n              className=\"btn btn-primary btn-block mt-4\" \r\n              />\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n  \r\n};\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createProject }\r\n)(AddProject); // AddProject is son","import { \r\n    GET_BACKLOG, \r\n    GET_PROJECT_TASK, \r\n    DELETE_PROJECT_TASK \r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n}\r\n\r\nexport default function backlogReducer(state = initialState, action) {\r\n    const {type, payload} = action;\r\n    switch(type) {\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                project_tasks: payload\r\n            };\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_task: payload\r\n            };\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(\r\n                    project_task => project_task.projectSequence !== payload\r\n                )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function errorReducer(state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch(type) {\r\n        case GET_ERRORS:\r\n            return payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { DELETE_PROJECT, GET_PROJECT, GET_PROJECTS } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n};\r\n\r\nexport default function projectReducer(state = initialState, action) {\r\n    const {type, payload} = action;\r\n\r\n    switch(type) {\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: payload\r\n            };\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project: payload\r\n            };\r\n        case DELETE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter(\r\n                    project => project.projectIdentifier !== payload\r\n                )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import { LOGOUT, SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    user: {},\r\n    validToken: false\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n    if(payload) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport default function securityReducer(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                validToken: booleanActionPayload(payload),\r\n                user: payload\r\n            };\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                validToken: false,\r\n                user: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers ({\r\n    errors: errorReducer,\r\n    project: projectReducer,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {}\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = \r\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store = createStore(\r\n        rootReducer, \r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            ReactReduxDevTools\r\n        )\r\n    );\r\n} else {\r\n    store = createStore(\r\n        rootReducer, \r\n        initialState,\r\n        compose(\r\n            applyMiddleware(...middleware))\r\n    );\r\n}\r\n\r\nexport default store;","import React, { useEffect, useState } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\nconst UpdateProject = ({ getProject, createProject, project, errors }) => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n        \r\n    const [dataForm, setDataForm] = useState({\r\n        id: project.id,\r\n        projectName: \"\",\r\n        projectIdentifier: id,\r\n        description: \"\",\r\n        start_date: \"\",\r\n        end_date: \"\",\r\n        errors: {}\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        getProject(id, navigate);\r\n        setDataForm({...dataForm, id: project.id, errors: errors});\r\n    }, [getProject, project, errors]); // set \"id\" as long as get project\r\n\r\n\r\n\r\n    const onChange = e => {\r\n        setDataForm({ ...dataForm, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const updateProject = {\r\n            id: dataForm.id,\r\n            projectName: dataForm.projectName,\r\n            projectIdentifier: dataForm.projectIdentifier,\r\n            description: dataForm.description,\r\n            start_date: dataForm.start_date,\r\n            end_date: dataForm.end_date\r\n        };\r\n\r\n        createProject(updateProject, navigate);\r\n    }\r\n\r\n    return (\r\n        <div className=\"project\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                        <hr />\r\n                        <form onSubmit={onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.projectName\r\n                                        })}\r\n                                    placeholder=\"Project Name\"\r\n                                    name=\"projectName\"\r\n                                    value={dataForm.projectName}\r\n                                    onChange={onChange} />\r\n                                    {errors.projectName && (\r\n                                        <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                    )}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control form-control-lg\" \r\n                                    placeholder={id}\r\n                                    disabled\r\n                                    name=\"projectIdentifier\"\r\n                                    value={dataForm.projectIdentifier}\r\n                                    onChange={onChange} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <textarea \r\n                                    className={classnames(\"form-control form-control-lg\", {\r\n                                        \"is-invalid\": errors.description\r\n                                        })} \r\n                                    placeholder=\"Project Description\"\r\n                                    name=\"description\"\r\n                                    value={dataForm.description}\r\n                                    onChange={onChange} />\r\n                                    {errors.description && (\r\n                                        <div className=\"invalid-feedback\">{errors.description}</div>\r\n                                    )}\r\n                            </div>\r\n                            <h6>Start Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"date\" \r\n                                    className=\"form-control form-control-lg\" \r\n                                    name=\"start_date\"\r\n                                    value={dataForm.start_date}\r\n                                    onChange={onChange} />\r\n                            </div>\r\n                            <h6>Estimated End Date</h6>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"date\" \r\n                                    className=\"form-control form-control-lg\" \r\n                                    name=\"end_date\"\r\n                                    value={dataForm.end_date}\r\n                                    onChange={onChange} />\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(UpdateProject);","import axios from \"axios\";\r\nimport { DELETE_PROJECT_TASK, GET_BACKLOG, GET_ERRORS, GET_PROJECT_TASK } from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n    backlog_id,\r\n    project_task,\r\n    navigate\r\n) => async dispatch => {\r\n    try {\r\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n        navigate(`/projectBoard/${backlog_id}`);\r\n\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, navigate) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n\r\n        dispatch({\r\n            type: GET_PROJECT_TASK,\r\n            payload: res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n        navigate('/dashboard');\r\n    }\r\n};\r\n\r\nexport const updateProjectTask = (backlog_id, pt_id, project_task, navigate) => async dispatch => {\r\n    try {\r\n        await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n        navigate(`/projectBoard/${backlog_id}`);\r\n\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n    if(window.confirm(`You are deleting project task ${pt_id}, this action cannot be undone`)) {\r\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n\r\n        dispatch({\r\n            type: DELETE_PROJECT_TASK,\r\n            payload: pt_id\r\n        });\r\n    }\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteProjectTask } from '../../../actions/backlogActions';\r\n\r\nconst ProjectTask = ({ deleteProjectTask, project_task}) => {\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    const onDeleteClick = (backlog_id, pt_id) => {\r\n        deleteProjectTask(backlog_id, pt_id);\r\n    }\r\n\r\n    if(project_task.priority === 1) {\r\n        priorityClass = \"bg-danger text-light\"\r\n        priorityString = \"HIGH\"\r\n    };\r\n\r\n    if(project_task.priority === 2) {\r\n        priorityClass = \"bg-warning text-light\"\r\n        priorityString = \"MEDIUM\"\r\n    };\r\n\r\n    if(project_task.priority === 3) {\r\n        priorityClass = \"bg-info text-light\"\r\n        priorityString = \"LOW\"\r\n    };\r\n\r\n  return (\r\n    <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n            ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n            <h5 className=\"card-title\">{project_task.summary}</h5>\r\n            <p className=\"card-text text-truncate \">\r\n                {project_task.acceptanceCriteria}\r\n            </p>\r\n            <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${\r\n                project_task.projectSequence\r\n            }`} className=\"btn btn-primary\">\r\n                View / Update\r\n            </Link>\r\n\r\n            <button \r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={() => onDeleteClick(project_task.projectIdentifier, project_task.projectSequence)}\r\n            >Delete</button>\r\n        </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nProjectTask.propTypes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);","import React from 'react';\r\nimport ProjectTask from './ProjectTasks/ProjectTask';\r\n\r\nconst Backlog = ({project_tasks}) => {\r\n    const tasks = project_tasks.map(project_task => (\r\n        <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for(let i = 0; i < tasks.length; i++) {\r\n        if(tasks[i].props.project_task.status === \"TO_DO\") {\r\n            todoItems.push(tasks[i]);\r\n        }\r\n    };\r\n\r\n    for(let i = 0; i < tasks.length; i++) {\r\n        if(tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n            inProgressItems.push(tasks[i]);\r\n        }\r\n    };\r\n\r\n    for(let i = 0; i < tasks.length; i++) {\r\n        if(tasks[i].props.project_task.status === \"DONE\") {\r\n            doneItems.push(tasks[i]);\r\n        }\r\n    };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-secondary text-white\">\r\n                            <h3>TO DO</h3>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {todoItems}\r\n                    {/* <ProjectTask /> */}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-primary text-white\">\r\n                            <h3>In Progress</h3>\r\n                        </div>\r\n                    </div>\r\n                    {inProgressItems}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-success text-white\">\r\n                            <h3>Done</h3>\r\n                        </div>\r\n                    </div>\r\n                    {doneItems}\r\n                </div>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Backlog;","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Backlog from './Backlog';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { getBacklog } from '../../actions/backlogActions';\r\n\r\nconst ProjectBoard = ({ backlog, getBacklog, errors }) => {\r\n    const { id } = useParams();\r\n    const { project_tasks } = backlog;\r\n    const [err, setErr] = useState({});\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (err, project_tasks) => {\r\n        if(project_tasks.length < 1) {\r\n            if(err.projectNotFound) {\r\n                return (\r\n                    <div className='alert alert-danger text-center' role='alert'>\r\n                        {err.projectNotFound}\r\n                    </div>\r\n                )\r\n            } else if(err.projectIdentifier) {\r\n                return (\r\n                    <div className='alert alert-danger text-center' role='alert'>\r\n                        {err.projectIdentifier}\r\n                    </div>\r\n                )\r\n            } else {\r\n                return (\r\n                    <div className='alert alert-info text-center' role='alert'>\r\n                        No Project Tasks on this board\r\n                    </div>\r\n                )\r\n            }\r\n        } else {\r\n            return <Backlog project_tasks={project_tasks}/>\r\n        }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(err, project_tasks);\r\n\r\n    useEffect(() => {\r\n        getBacklog(id);\r\n        setErr({ err: errors });\r\n    }, [getBacklog, id, errors]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        <Link to={`/addProjectTasks/${id}`} className=\"btn btn-primary mb-3\">\r\n            <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        \r\n        {BoardContent}\r\n    </div>\r\n  )\r\n};\r\n\r\nProjectBoard.propTypes = {\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklog: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    backlog: state.backlog,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);","import React, { useState } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { addProjectTask } from '../../../actions/backlogActions';\r\nimport PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst AddProjectTask = ({ addProjectTask, errors }) => {\r\n    const { id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [dataForm, setDataForm] = useState({\r\n        \"summary\": \"\",\r\n        \"acceptanceCriteria\": \"\",\r\n        \"status\": \"\",\r\n        \"priority\": 0,\r\n        \"dueDate\": \"\",\r\n        projectIdentifier: id,\r\n        errors: {}\r\n    });\r\n\r\n    const onChange = e => {\r\n        setDataForm({...dataForm, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newDataForm = {\r\n            summary: dataForm.summary,\r\n            acceptanceCriteria: dataForm.acceptanceCriteria,\r\n            status: dataForm.status,\r\n            priority: dataForm.priority,\r\n            dueDate: dataForm.dueDate\r\n        };\r\n\r\n        addProjectTask(dataForm.projectIdentifier, newDataForm, navigate);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setDataForm({ ...dataForm, errors: errors });\r\n    }, [errors]);\r\n\r\n  return (\r\n    <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                        Back to Project Board\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                    <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                    <form onSubmit={onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\" \r\n                                className={classnames(\"form-control form-control-lg\", {\r\n                                    \"is-invalid\": errors.summary\r\n                                })}\r\n                                name=\"summary\" \r\n                                placeholder=\"Project Task summary\" \r\n                                value={dataForm.summary}\r\n                                onChange={onChange}\r\n                            />\r\n                        {\r\n                            errors.summary && (\r\n                                <div className='invalid-feedback'>{errors.summary}</div>\r\n                            )\r\n                        }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea \r\n                                className=\"form-control form-control-lg\" \r\n                                placeholder=\"Acceptance Criteria\" \r\n                                name=\"acceptanceCriteria\" \r\n                                value={dataForm.acceptanceCriteria}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <h6>Due Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"date\" \r\n                                className=\"form-control form-control-lg\" \r\n                                name=\"dueDate\" \r\n                                value={dataForm.dueDate}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select \r\n                                className=\"form-control form-control-lg\" \r\n                                name=\"priority\"\r\n                                value={dataForm.priority}\r\n                                onChange={onChange}\r\n                            >\r\n                                <option value={0}>Select Priority</option>\r\n                                <option value={1}>High</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>Low</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <select \r\n                                className=\"form-control form-control-lg\" \r\n                                name=\"status\"\r\n                                value={dataForm.status}\r\n                                onChange={onChange}\r\n                            >\r\n                                <option value=\"\">Select Status</option>\r\n                                <option value=\"TO_DO\">TO DO</option>\r\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                <option value=\"DONE\">DONE</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nAddProjectTask.propTypes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { getProjectTask, updateProjectTask } from '../../../actions/backlogActions';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nconst UpdateProjectTask = ({ getProjectTask, updateProjectTask, project_task, errors }) => {\r\n    const { backlog_id, pt_id } = useParams();\r\n    const navigate = useNavigate();\r\n    const [dataForm, setDataForm] = useState({\r\n        \"id\": project_task.id,\r\n        \"projectSequence\": \"\",\r\n        \"summary\": \"\",\r\n        \"acceptanceCriteria\": \"\",\r\n        \"status\": \"\",\r\n        \"priority\": \"\",\r\n        \"dueDate\": \"\",\r\n        \"projectIdentifier\": \"\",\r\n        \"created_At\": project_task.created_At,\r\n        errors: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        getProjectTask(backlog_id, pt_id, navigate);\r\n        // setDataForm({...dataForm,\r\n        //     projectSequence: project_task.projectSequence,\r\n        //     summary: project_task.summary,\r\n        //     acceptanceCriteria: project_task.acceptanceCriteria,\r\n        //     status: project_task.status,\r\n        //     priority: project_task.priority,\r\n        //     dueDate: project_task.dueDate,\r\n        //     projectIdentifier: project_task.projectIdentifier,\r\n        //     create_At: project_task.create_At,\r\n        //     errors: errors\r\n        // });\r\n        setDataForm({...dataForm, \r\n            projectIdentifier: project_task.projectIdentifier, \r\n            projectSequence: project_task.projectSequence,\r\n            created_At: project_task.created_At,\r\n            id: project_task.id, \r\n            errors: errors});\r\n    }, [getProjectTask, project_task, errors]);\r\n\r\n    const onChange = e => {\r\n        setDataForm({ ...dataForm, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const UpdateProjectTask = {\r\n            id: dataForm.id,\r\n            projectSequence: dataForm.projectSequence,\r\n            summary: dataForm.summary,\r\n            acceptanceCriteria: dataForm.acceptanceCriteria,\r\n            status: dataForm.status,\r\n            priority: dataForm.priority,\r\n            dueDate: dataForm.dueDate,\r\n            projectIdentifier: dataForm.projectIdentifier,\r\n            create_At: dataForm.create_At\r\n        };\r\n\r\n        updateProjectTask(dataForm.projectIdentifier, dataForm.projectSequence, UpdateProjectTask, navigate);\r\n    };\r\n\r\n  return (\r\n    <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to={`/projectBoard/${dataForm.projectIdentifier}`} className=\"btn btn-light\">\r\n                        Back to Project Board\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                    <p className=\"lead text-center\">Project Name: {dataForm.projectIdentifier} | \r\n                        Project Task ID: {dataForm.projectSequence}{\" \"} </p>\r\n                    <form onSubmit={onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\" \r\n                                className={classnames(\"form-control form-control-lg\", {\r\n                                    \"is-invalid\": errors.summary\r\n                                })}\r\n                                name=\"summary\" \r\n                                placeholder=\"Project Task summary\" \r\n                                value={dataForm.summary}\r\n                                onChange={onChange}\r\n                            />\r\n                            {\r\n                                errors.summary && (\r\n                                    <div className='invalid-feedback'>{errors.summary}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea \r\n                                className=\"form-control form-control-lg\" \r\n                                placeholder=\"Acceptance Criteria\" \r\n                                name=\"acceptanceCriteria\" \r\n                                value={dataForm.acceptanceCriteria}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <h6>Due Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"date\" \r\n                                className=\"form-control form-control-lg\" \r\n                                name=\"dueDate\" \r\n                                value={dataForm.dueDate}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select \r\n                                className=\"form-control form-control-lg\" \r\n                                name=\"priority\"\r\n                                value={dataForm.priority}\r\n                                onChange={onChange}\r\n                            >\r\n                                <option value={0}>Select Priority</option>\r\n                                <option value={1}>High</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>Low</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <select \r\n                                className=\"form-control form-control-lg\" \r\n                                name=\"status\"\r\n                                value={dataForm.status}\r\n                                onChange={onChange}\r\n                            >\r\n                                <option value=\"\">Select Status</option>\r\n                                <option value=\"TO_DO\">TO DO</option>\r\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                <option value=\"DONE\">DONE</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(UpdateProjectTask);","import React, { useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Landing = ({ security }) => {\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if(security.validToken) {\r\n            navigate('/dashboard');\r\n        }\r\n        // security.validToken ? navigate('/dashboard') : null;\r\n    }, [security]);\r\n\r\n  return (\r\n    <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                        <p className=\"lead\">\r\n                            Create your account to join active projects or start your own\r\n                        </p>\r\n                        <hr />\r\n                        <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                            Sign Up\r\n                        </Link>\r\n                        {'  '}\r\n                        <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                            Login\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);","import React, { useEffect, useState } from 'react';\r\nimport { createNewUser } from '../../actions/securityActions';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst Register = ({ createNewUser, errors, security }) => {\r\n    const navigate = useNavigate();\r\n    const [dataForm, setDataForm] = useState({\r\n        username: '',\r\n        fullName: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        errors: {}\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(security.validToken) {\r\n            navigate('/dashboard');\r\n        }\r\n        // security.validToken ? navigate('/dashboard') : null;\r\n    }, [security]);\r\n\r\n    useEffect(() => {\r\n        setDataForm({ ...dataForm, errors: errors });\r\n    }, [errors]);\r\n\r\n\r\n    const onChange = e => {\r\n        setDataForm({ ...dataForm, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: dataForm.username,\r\n            fullName: dataForm.fullName,\r\n            password: dataForm.password,\r\n            confirmPassword: dataForm.confirmPassword\r\n        };\r\n\r\n        createNewUser(newUser, navigate);\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"register\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                    <p className=\"lead text-center\">Create your Account</p>\r\n                    <form onSubmit={onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\" \r\n                                className={classnames(\"form-control form-control-lg\", {\r\n                                    \"is-invalid\": errors.fullName\r\n                                })} \r\n                                placeholder=\"Full Name\" \r\n                                name=\"fullName\"\r\n                                value={dataForm.fullName}\r\n                                onChange={onChange}\r\n                            />\r\n                            {\r\n                                errors.fullName && (\r\n                                    <div className='invalid-feedback'>{errors.fullName}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"email\" \r\n                                className={classnames(\"form-control form-control-lg\", {\r\n                                    \"is-invalid\": errors.username\r\n                                })} \r\n                                placeholder=\"Email Address (Username)\" \r\n                                name=\"username\"\r\n                                value={dataForm.username}\r\n                                onChange={onChange}\r\n                            />\r\n                            {\r\n                                errors.username && (\r\n                                    <div className='invalid-feedback'>{errors.username}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"password\" \r\n                                className={classnames(\"form-control form-control-lg\", {\r\n                                    \"is-invalid\": errors.password\r\n                                })} \r\n                                placeholder=\"Password\" \r\n                                name=\"password\" \r\n                                value={dataForm.password}\r\n                                onChange={onChange}\r\n                            />\r\n                            {\r\n                                errors.confirmPassword && (\r\n                                    <div className='invalid-feedback'>{errors.confirmPassword}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"password\" \r\n                                className={classnames(\"form-control form-control-lg\", {\r\n                                    \"is-invalid\": errors.confirmPassword\r\n                                })}\r\n                                placeholder=\"Confirm Password\"\r\n                                name=\"confirmPassword\"\r\n                                value={dataForm.confirmPassword}\r\n                                onChange={onChange}\r\n                             />\r\n                             {\r\n                                errors.confirmPassword && (\r\n                                    <div className='invalid-feedback'>{errors.confirmPassword}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nRegister.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { login } from '../../actions/securityActions';\r\n\r\nconst Login = ({ login, security, errors }) => {\r\n    const navigate = useNavigate();\r\n    const [dataForm, setDataForm] = useState({\r\n        username: '',\r\n        password: '',\r\n        errors: {}\r\n    });\r\n\r\n    const onChange = e => {\r\n        setDataForm({ ...dataForm, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        const LoginRequest = {\r\n            username: dataForm.username,\r\n            password: dataForm.password\r\n        };\r\n\r\n        login(LoginRequest);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(security.validToken) {\r\n            navigate('/dashboard');\r\n        }\r\n        // security.validToken ? navigate('/dashboard') : null;\r\n    }, [security]);\r\n\r\n    useEffect(() => {\r\n        setDataForm({ ...dataForm, errors: errors });\r\n    }, [errors]);\r\n\r\n  return (\r\n    <div className=\"login\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h1 className=\"display-4 text-center\">Log In</h1>\r\n                    <form onSubmit={onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\" \r\n                                className={classnames(\"form-control form-control-lg\", {\r\n                                    \"is-invalid\": errors.username\r\n                                })} \r\n                                placeholder=\"Email Address\" \r\n                                name=\"username\" \r\n                                value={dataForm.username}\r\n                                onChange={onChange}\r\n                            />\r\n                            {\r\n                                errors.username && (\r\n                                    <div className='invalid-feedback'>{errors.username}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"password\" \r\n                                className={classnames(\"form-control form-control-lg\", {\r\n                                    \"is-invalid\": errors.password\r\n                                })} \r\n                                placeholder=\"Password\" \r\n                                name=\"password\" \r\n                                value={dataForm.password}\r\n                                onChange={onChange}\r\n                            />\r\n                            {\r\n                                errors.password && (\r\n                                    <div className='invalid-feedback'>{errors.password}</div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nLogin.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SecureRoute = ({ \r\n    component: Component, \r\n    security\r\n}) => {\r\n    if(security.validToken) {\r\n        return <Component />\r\n    } else {\r\n        return <Navigate to='/login' />\r\n    }\r\n};\r\n\r\nSecureRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecureRoute);","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Dashboard from './components/Dashboard'\nimport Header from './components/Layout/Header';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport AddProject from './components/Project/AddProject';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/projectBoard/ProjectBoard';\nimport AddProjectTask from './components/projectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/projectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport SecureRoute from './securityUtils/SecureRoute';\nimport { logout } from './actions/securityActions';\n\nimport jwt_decode from 'jwt-decode';\nimport setJWTToken from './securityUtils/setJWTToken';\nimport { SET_CURRENT_USER } from './actions/types';\n\nconst App = () => {\n\n  const jwtToken = localStorage.jwtToken;\n\n  if(jwtToken) {\n    setJWTToken(jwtToken);\n    const decoded_jwtToken = jwt_decode(jwtToken);\n    store.dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded_jwtToken\n    });\n\n    const currentTime = Date.now()/1000;\n    if(decoded_jwtToken.exp < currentTime) {\n      // handle logout\n      store.dispatch(logout());\n      window.location.href = \"/\";\n    }\n  }\n\n  return (\n     <Provider store={store}>\n       <Router>\n         <div className='App'>\n           <Header />\n           <Routes>\n              <Route exact path='/' element={<Landing />} />\n              <Route exact path='/register' element={<Register />} />\n              <Route exact path='/login' element={<Login />} />\n\n              <Route path='/dashboard' element={<SecureRoute component={Dashboard} />} />\n              <Route path='/addProject' element={<SecureRoute component={AddProject} />} />\n              <Route path='/updateProject/:id' element={<SecureRoute component={UpdateProject} />} />\n              <Route path='/projectBoard/:id' element={<SecureRoute component={ProjectBoard} />} />\n              <Route path='/addProjectTasks/:id' element={<SecureRoute component={AddProjectTask} />} />\n              <Route path='/updateProjectTask/:backlog_id/:pt_id' element={<SecureRoute component={UpdateProjectTask} />} />\n           </Routes>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}